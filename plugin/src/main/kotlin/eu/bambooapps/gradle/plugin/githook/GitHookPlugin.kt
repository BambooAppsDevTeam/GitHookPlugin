/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package eu.bambooapps.gradle.plugin.githook

import org.gradle.api.Plugin
import org.gradle.api.Project
import org.gradle.internal.os.OperatingSystem
import org.gradle.kotlin.dsl.assign
import org.gradle.kotlin.dsl.create
import org.gradle.kotlin.dsl.register
import org.gradle.util.GradleVersion

/**
 * Plugin that helps to copy git hooks to the .git folder from the specified directory
 */
class GitHookPlugin : Plugin<Project> {
    private val minGradleVersion = GradleVersion.version("7.0")

    override fun apply(project: Project) {
        check(GradleVersion.current() >= minGradleVersion) {
            "GitHookPlugin requires Gradle 7.0 or later."
        }

        val extension = project.extensions.create<GitHooksExtension>("gitHooks")

        val hooksDirectory = extension.gitDirectory
            .convention(project.rootProject.layout.projectDirectory.dir(".git"))
            .dir("hooks")

        // Register a task
        project.tasks.register<CopyGitHooks>("copyGitHooks") {
            description = "Copies the git hooks from /git-hooks to the .git folder."
            group = "git hooks"
            gitHooksDirectory = extension.gitHooksDirectory
                .convention(project.rootProject.layout.projectDirectory.dir("git-hooks"))
            gitHooksDestinationDirectory = hooksDirectory
        }


        project.tasks.register<InstallGitHooks>("installGitHooks") {
            description = "Prepares git hooks for use by git"
            group = "git hooks"
            gitHooksDestinationDirectory = hooksDirectory
            dependsOn("copyGitHooks")
            onlyIf { isLinuxOrMacOs() }
            doLast {
                logger.debug("Git hook installed successfully.")
            }
        }
    }

    private fun isLinuxOrMacOs(): Boolean {
        val osName = OperatingSystem.current()
        return osName.isLinux ||
                osName.isMacOsX
    }
}
